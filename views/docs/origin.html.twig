{% extends "docs.html.twig" %}

{% block title %}Component: OriginCheck | CORS {% endblock %}

{% block description %}
    The OriginCheck component will verify incoming HTTP connections come from domains you have white lsited.
{% endblock %}

{% block doc_content %}
    <h2>OriginCheck</h2>

    <section id="purpose">
        <h3>
            Purpose <small>of this <em>Component</em> <a class="headerlink" href="#purpose" title="Permalink to this headline">¶</a></small>
        </h3>

        <p>
            This component helps secure your server from unwanted websites trying to connect users to your server.
            When a WebSocket connection from a browser is created it sends the website URL the user is on in an HTTP header.
            This component will automatically close connections if the browser is not from the site(s) you're expecting.
        </p>

        <p>
            <strong>Note:</strong> This component is bundled within the App class.
            By default, in Ratchet\App, OriginCheck is configured to only accept requests from the same domain
            as is passed to App's __construct.
        </p>
    </section>

    <section id="events">
        <h3>
            Events <small>triggered by this <em>Component</em> <a class="headerlink" href="#events" title="Permalink to this headline">¶</a></small>
        </h3>

        <p>As found in the API Docs: Triggered events are propagated through a <a href="/api/class-Ratchet.Http.HttpServerInterface.html">HttpServerInterface</a> object passed to the <em>__construct</em>.</p>

        <ul>
            <li><span class="label label-success">onOpen</span> (ConnectionInterface <em>$conn</em>, RequestInterface $request = null) - A new client connection has been opened</li>
            <li><span class="label label-warning">onClose</span> (ConnectionInterface <em>$conn</em>) - A client connection is about to, or has closed</li>
            <li><span class="label label-info">onMessage</span> (ConnectionInterface <em>$from</em>, string <em>$message</em>) - A data message has been received</li>
            <li><span class="label label-danger">onError</span> (ConnectionInterface <em>$from</em>, Exception <em>$error</em>) - An error has occurred with a <em>Connection</em></li>
        </ul>
    </section>

    <section id="configuration">
        <h3>
            Configuration <small>properties <a class="headerlink" href="#configuration" title="Permalink to this headline">¶</a></small>
        </h3>

        <ul>
            <li><strong>$allowedOrigins</strong> - An array of strings of origins (URLs) to allow.</li>
        </ul>
    </section>

    <section id="functions">
        <h3>
            Functions <small>callable on <em>Connections</em> <a class="headerlink" href="#functions" title="Permalink to this headline">¶</a></small>
        </h3>

        <ul>
            <li><span class="label label-info">send</span> (string <em>$message</em>) - Send a message (string) to the client</li>
            <li><span class="label label-warning">close</span> - Gracefully close the connection to the client</li>
        </ul>
    </section>

    <section id="wraps">
        <h3>
            Wraps <small>other components nicely <a class="headerlink" href="#wraps" title="Permalink to this headline">¶</a></small>
        </h3>

        <ul>
            <li><a href="/docs/websocket">WsServer</a></li>
            <li><a href="/docs/router">Router</a></li>
        </ul>
    </section>

    <section id="wrapped">
        <h3>
            Wrapped <small>by other components nicely <a class="headerlink" href="#wrapped" title="Permalink to this headline">¶</a></small>
        </h3>

        <ul>
            <li><a href="/docs/http">HttpServer</a></li>
        </ul>
    </section>

    <section id="usage">
        <h3>
            Usage <small><a class="headerlink" href="#usage" title="Permalink to this headline">¶</a></small>
        </h3>

        <pre class="prettyprint">&lt;?php
// Your shell script
use Ratchet\Http\OriginCheck;
use Ratchet\Http\HttpServer;
use Ratchet\Server\IoServer;

    $checkedApp = new OriginCheck(new MyHttpApp, array('localhost'));
    $checkedApp->allowedOrigins[] = 'mydomain.com';

    $server = IoServer::factory(new HttpServer($checkedApp));
    $server->run();</pre>
    </section>
{% endblock %}

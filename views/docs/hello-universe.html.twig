{% extends "layout.html.twig" %}

{% import "macros.html.twig" as m %}

{% block title %}Tutorial: Pub/Sub &amp; RPC with WAMP{% endblock %}

{% block description %}
  This tutorial will show you how easy WAMP is and how it will make your development life easy
{% endblock %}

{% block body %}
  <div class="container-fluid">
    <div class="row-fluid">

    {{ m.menu() }}

      <div class="span9">
          <h2>Hello Universe! <small>Expand <em>Your</em> Application</small></h2>

          <section class="intro" id="goal">
              <h3>Goal <a class="headerlink" href="#goal" title="Permalink to this headline">¶</a></h3>

              <p>
                  In the tutorial <a href="/docs/hello-world">Hello World!</a> we covered an introduction to Ratchet by creating a basic chat application.
                  In this tutorial we're going to build a more advanced chat application that has the functionality found in IRC.
                  These features include (from the perspective of the client/user):
                  <ul>
                      <li>Giving yourself a unique display name</li>
                      <li>The ability create and/or join chat rooms</li>
                      <li>The ability to send messages to rooms you've joined</li>
                      <li>Receive event notifications for the rooms you're in upon someone:
                          <ul>
                              <li>sending a message</li>
                              <li>changing their name</li>
                              <li>joining</li>
                              <li>leaving</li>
                          </ul>
                      </li>
                  </ul>
              </p>
          </section>

          <section id="structure">
              <h2>The ChatRoom Class Structure <a class="headerlink" href="#structure" title="Permalink to this headline">¶</a></h2>

              <p><strong>Note:</strong>
                  The <a rel="external" href="http://wamp.ws/spec"><abbr title="WebSocket Application Messaging Protocol">WAMP</abbr> Specification</a> makes developing WebSocket applications <em>much</em> easier by describing commonly used events triggered either by the server or clients.
                  Please familiarize yourself with the 9 events before continuing.
              </p>

              <p>
                  We will accomplish this by using the <a href="/docs/wamp">WAMPServerComponent</a> as well as an accompanying Javascript library called <a rel="external" href="http://autobahn.ws/developers/autobahnjs">AutobahnJS</a> (<a rel="external" href="https://github.com/tavendo/AutobahnJS">GitHub Repo</a>).
                  Knowing we will be using the <em>WAMPComponent</em>, it requires an object that implements the <a href="/api/class-Ratchet.Component.WAMP.WAMPServerComponentInterface.html">WAMPServerComponentInterface</a>, so our class will implement that:
              </p>

              <pre class="prettyprint">&lt;?php
namespace MyApp;
use Ratchet\Component\Wamp\WampServerInterface;
use Ratchet\ConnectionInterface;

class ChatRoom implements WampServerInterface {
  public function onOpen(ConnectionInterface $conn) {
  }

  public function onClose(ConnectionInterface $conn) {
  }

  public function onCall(ConnectionInterface $conn, $id, $topic, array $params) {
  }

  public function onSubscribe(ConnectionInterface $conn, $topic) {
  }

  public function onUnSubscribe(ConnectionInterface $conn, $topic) {
  }

  public function onPublish(ConnectionInterface, $conn, $topic, $event) {
  }

  public function onError(ConnectionInterface $conn, \Exception $e) {
  }
}</pre>
          </section>
      </div>
  </div>
{% endblock %}
